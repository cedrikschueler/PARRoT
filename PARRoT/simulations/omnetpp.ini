[General]
sim-time-limit = 900s
num-rngs = 2

.seed = ${seed = 1..25 step 1}
seed-set=${seed}

.cbr = ${cbr = 2}
.hi = ${hi = 500}
.numHosts = ${numHosts =10}
.provideWaypoints = ${provideWaypoints = true}
.speed = ${speed = 50}

# Time Interval Settings
**.mhChirpInterval = ${hi}ms

# Parrod Parameters
## Routing
**.maxHops = ${mHops = 32}
**.neighborReliabilityTimeout = ${NP = 5}*${hi}ms
**.rescheduleRoutesOnTimeout = false
**.useOHRepair = false
## Reinforcement Learning
**.qFctAlpha = ${qa = 0.5 }
**.qFctGamma = ${qg = 0.8}
**.combinationMethod = "M"
## Mobility Prediction
**.historySize = ${historySize = 5}
**.predictionMethod = "waypoint"

# Necessary if distortion shall be applied!
**.advancedMobility = ${advancedMobility = false}

[Config BonnMotion]
network=parrot.simulations.Scenario
*.visualizer.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.mobilityVisualizer.displayPositions = true
*.visualizer.mobilityVisualizer.displayOrientations = false
*.visualizer.mobilityVisualizer.displayVelocities = true
*.visualizer.mobilityVisualizer.displayMovementTrails = true

# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true

# Routing settings
*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

# Wireless settings
*.*.wlan[*].bitrate = 54Mbps

# Visualizer settings
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.nodeFilter = "not (*switch* or *Switch* or *AP*)"

**.numHosts = ${numHosts}
*.host[*].mobility.typename = "ExtendedBonnMotionMobility"
*.host[*].mobility.is3D = true
*.host[*].mobility.nodeId = -1
*.host[*].mobility.applyDistortion = ${advancedMobility}
*.host[*].mobility.wpProvided = ${provideWaypoints}

*.host[*].mobility.traceFile = "TraceFiles/${seed}.csv"
*.host[*].mobility.distFile = "DistortionFiles/dist_5m_${seed}.csv"
*.host[*].mobility.wpFile = "WaypointFiles/${seed}_wp.csv"


# visualizer parameters
*.visualizer.routingTableVisualizer.displayRoutingTables = true
*.visualizer.routingTableVisualizer.labelFormat = ""
*.visualizer.routingTableVisualizer.lineShiftMode = "none"
*.visualizer.routingTableVisualizer.destinationFilter = "*"
*.visualizer.mediumVisualizer.displayCommunicationRanges = true
# Data Stream 1
*.host[0].numApps = 1
*.host[0].app[0].typename = "UdpBasicApp"
*.host[0].app[0].destAddresses = "host[1]"
*.host[0].app[0].destPort = 5000
*.host[0].app[0].messageLength = 1460B

# CBR @ 2Mbit/s --> sendInterval = (BR (Mbit/s) /MTU (bits))^-1 (seconds) = 5.84ms
*.host[0].app[0].sendInterval = 11.68ms/${cbr}


*.host[0].app[0].packetName = "UDPData"
*.host[0].app[0].startTime = 5s

*.host[1].numApps = 1
*.host[1].app[0].typename = "UdpSink"
*.host[1].app[0].localPort = 5000


# communication range parameters
*.*.wlan[*].radio.transmitter.power = 20dBm

# configurator parameters
*.configurator.addStaticRoutes = false
*.configurator.addDefaultRoutes = false

# physics
*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m


# FreeSpacePathLoss
*.radioMedium.pathLoss.typename = "FreeSpacePathLoss"
*.radioMedium.pathLoss.alpha = 2.75

# EmpiricNakagamiFading
#*.radioMedium.pathLoss.typename = "EmpiricNakagamiFading"
#*.radioMedium.pathLoss.alpha = 2.75
#*.radioMedium.pathLoss.pathlossFile = "EmpiricPathloss/Empiric_Nakagami_a275_m200.csv"

# TwoRayGroundReflection
#*.radioMedium.pathLoss.typename = "TwoRayGroundReflection"
