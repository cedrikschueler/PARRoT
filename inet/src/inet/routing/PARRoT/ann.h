#include <math.h>

namespace ann{
const char* classes[3] = {"friis", "nakagami", "tworay"};

const float th0[10] = {-1.257006664174854, -20.13197050887091, 33.08941143163764, 8.671776771587387, -45.04195300342747, -56.36723026787665, -2.7528039513626457, -36.10926823963468, -64.44944301501494, -99.52392191703466};
const float th1[10] = {2.908489105952714, -5.824076206963969, 31.11506038828854, -0.4536697368566011, 12.305564016657915, 13.374522371250846, -30.320251073719145, -15.396426056377132, 30.62898686428687, 1.5376089443003973};
const float th_out[3] = {6.039624232909691, -5.998994407099624, -8.536379084106503};

float sigmoid(float _x)
{
	return 1.0 / (1.0 + exp(-_x));
}

void activate(float *_values, const float *_thresholds, unsigned int _size)
{
	unsigned int i;
	for(i=0; i<_size; i++)
		_values[i] = sigmoid(_values[i] + _thresholds[i]);
}

unsigned int findMax(float *_values, unsigned int _size)
{
	float max = _values[0];
	unsigned int index = 0;
	unsigned int i;
	for(i=1; i<_size; i++)
	{
		if(_values[i]>max)
		{
			max = _values[i];
			index = i;
		}
	}
	return index;
}

const char* predict(float _d_max, float _d_min, float _d_mean, float _d_std, float _rss_max, float _rss_min, float _rss_mean, float _rss_std)
{
	float in[8] = {2*(_d_max-106.394)/395.228-1, 2*(_d_min-13.0478)/405.7652-1, 2*(_d_mean-77.8227)/358.4043-1, 2*(_d_std-4.46694)/183.44006000000002-1, 2*(_rss_max+83.9408)/45.858999999999995-1, 2*(_rss_min+84.9862)/20.5728-1, 2*(_rss_mean+84.3911)/27.412699999999994-1, 2*(_rss_std-0.0549529)/17.7742471-1};

	float z0[10] = {in[0]*-19.31276201972294+in[1]*-10.12044187241258+in[2]*6.695643869099716+in[3]*19.17518311496088+in[4]*-9.96167616724454+in[5]*-4.834683156488672+in[6]*-48.297320748849934+in[7]*46.56575804602498, in[0]*-29.65643049118177+in[1]*-49.37716524151093+in[2]*-7.47108811969544+in[3]*-4.2655720387816825+in[4]*-22.397807244546904+in[5]*61.750711232290584+in[6]*-13.805556585177541+in[7]*-8.915143376612379, in[0]*79.78147661299707+in[1]*-82.0683940277525+in[2]*-13.008453460391417+in[3]*-19.634224177705384+in[4]*-48.910722269562974+in[5]*92.79531987652695+in[6]*-13.95139430560902+in[7]*26.493992291790033, in[0]*-70.88017241716072+in[1]*-28.235289049731193+in[2]*96.28746824926061+in[3]*-67.83052272276282+in[4]*-30.119226579243673+in[5]*-23.170473463486832+in[6]*79.9917683564338+in[7]*31.157785879126273, in[0]*-4.740569629049085+in[1]*-44.97243104676967+in[2]*20.764914185735137+in[3]*3.184125047501661+in[4]*-120.00657523312131+in[5]*-6.563454407633318+in[6]*73.38036499605043+in[7]*-12.10021386800529, in[0]*-2.6169550050381227+in[1]*-11.165131108489094+in[2]*-40.29213466145361+in[3]*31.478390266109713+in[4]*13.128843741687787+in[5]*56.164340631549315+in[6]*-44.25427287422154+in[7]*-107.72650674727691, in[0]*-2.5103556904907327+in[1]*-28.369146229909813+in[2]*17.913729470606487+in[3]*6.614567775252902+in[4]*-67.19333688913399+in[5]*18.671037924408473+in[6]*-40.561137408391126+in[7]*78.57108807133856, in[0]*-35.48391906146465+in[1]*-22.70065100672417+in[2]*-5.825024013996436+in[3]*13.950197784808484+in[4]*-10.148431439587348+in[5]*1.8313370907711428+in[6]*-20.776834896546486+in[7]*27.636648109023305, in[0]*0.8266993684054857+in[1]*18.832088160333832+in[2]*-64.63542925051769+in[3]*29.799656010403755+in[4]*30.386495750095683+in[5]*-2.4058934839290096+in[6]*-39.75751862838003+in[7]*-80.30363593043026, in[0]*-15.277964772597853+in[1]*-111.03665110152879+in[2]*13.5327347326163+in[3]*15.487733161345234+in[4]*-74.98596872975031+in[5]*3.9064500339880732+in[6]*-6.951735223077632+in[7]*-9.572172911252615};
	activate(z0, th0, 10);
	float z1[10] = {z0[0]*-10.284179314127073+z0[1]*-1.6100825624742248+z0[2]*-0.5242504305972369+z0[3]*-1.0944886036191872+z0[4]*-1.0853370940827523+z0[5]*1.7892264256444819+z0[6]*-1.476286023728365+z0[7]*-0.4911788153881609+z0[8]*-8.255316753183294+z0[9]*-3.0680775032866707, z0[0]*-11.93061672311663+z0[1]*-6.366798765211454+z0[2]*-4.6264123805942+z0[3]*9.484331093259206+z0[4]*-29.245996440420523+z0[5]*9.345427678025374+z0[6]*11.89163486730529+z0[7]*-11.149535842739807+z0[8]*7.538815586596746+z0[9]*-2.307947451241618, z0[0]*-1.0064202252976284+z0[1]*-11.970430859555128+z0[2]*-6.184392178549455+z0[3]*-24.428095378688976+z0[4]*-42.56439173814665+z0[5]*-1.847401672574673+z0[6]*-3.7296083749846694+z0[7]*-5.7923767806072375+z0[8]*20.545169144152055+z0[9]*-22.06343245350852, z0[0]*-10.366723212983526+z0[1]*-6.093947124009768+z0[2]*1.9918107502537847+z0[3]*4.57398052076012+z0[4]*-4.528145701763776+z0[5]*0.47351849539566565+z0[6]*3.9251957790605663+z0[7]*-0.1391319253524274+z0[8]*-8.22232666389577+z0[9]*-6.4761807865656165, z0[0]*-10.446500814194978+z0[1]*-10.15065483685948+z0[2]*9.974128470436868+z0[3]*-11.256208647706666+z0[4]*-30.50760064951927+z0[5]*-27.0708783672822+z0[6]*8.01249882132562+z0[7]*-20.233641202679934+z0[8]*7.328313977669491+z0[9]*-26.31737194268188, z0[0]*9.453710120311342+z0[1]*4.807882505946813+z0[2]*-19.575705758627304+z0[3]*-11.306166666167638+z0[4]*-4.773888502906647+z0[5]*-11.787701537902382+z0[6]*-22.285007181853523+z0[7]*-10.856530784905178+z0[8]*-3.8728577609840267+z0[9]*-5.867859800470755, z0[0]*-6.777099149072389+z0[1]*-24.84572915132034+z0[2]*29.509783598408603+z0[3]*0.5722766595726606+z0[4]*4.756860612476178+z0[5]*-0.5030019280683486+z0[6]*-7.016413446960522+z0[7]*-1.5815109255352686+z0[8]*31.342683914950932+z0[9]*-23.00467804660778, z0[0]*-27.78123287003884+z0[1]*-12.734383172724518+z0[2]*-6.339059840263167+z0[3]*1.161179812497353+z0[4]*28.819079354393747+z0[5]*4.94426212177252+z0[6]*-6.228195031097875+z0[7]*-2.2114354777784246+z0[8]*14.487342001778735+z0[9]*0.9978978290399021, z0[0]*10.473845980867365+z0[1]*-22.3429767139934+z0[2]*-18.13387327052124+z0[3]*-16.564737478606638+z0[4]*-11.06922467566968+z0[5]*-7.6919828940535+z0[6]*-17.385945616889334+z0[7]*-22.600247179817185+z0[8]*4.150926024154783+z0[9]*-8.23566152496473, z0[0]*-11.60593386910787+z0[1]*-0.8176180567174236+z0[2]*0.4659027720236526+z0[3]*-2.405066231495267+z0[4]*-1.2191843171525285+z0[5]*2.8454754559371436+z0[6]*-1.9309038534410596+z0[7]*-0.7843979575094562+z0[8]*-6.315858328082865+z0[9]*-3.229955885457771};
	activate(z1, th1, 10);
	float out[3] = {z1[0]*-6.217995013805296+z1[1]*7.846524821410973+z1[2]*-3.5449099611378143+z1[3]*-5.091062620489953+z1[4]*-8.33936790943166+z1[5]*-5.0919973286930365+z1[6]*-4.372867703315562+z1[7]*4.140510190907616+z1[8]*-4.425380115882921+z1[9]*-9.804444709357943, z1[0]*-8.219082438277098+z1[1]*-7.83821924539181+z1[2]*3.5276831304088625+z1[3]*-9.011459565748556+z1[4]*8.789944699540799+z1[5]*5.074573402773177+z1[6]*4.352334372916273+z1[7]*-4.117538891549393+z1[8]*4.4005200554099675+z1[9]*-5.180501373331194, z1[0]*9.289182549910164+z1[1]*2.434461598616594+z1[2]*-4.607468359661657+z1[3]*8.68342481722198+z1[4]*6.340174460791369+z1[5]*1.034664574422836+z1[6]*-2.527085061758968+z1[7]*1.1026527610027108+z1[8]*-3.234140243966798+z1[9]*8.912685054692371};
	activate(out, th_out, 3);

	unsigned int index = findMax(out, 3);
	return classes[index];
}
}
